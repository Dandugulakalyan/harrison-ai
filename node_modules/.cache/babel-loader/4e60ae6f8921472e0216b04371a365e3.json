{"ast":null,"code":"import * as EmailValidator from 'email-validator';\n\nconst hasSpecialChar = str => {\n  return /[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/.test(str);\n};\n\nconst hasNumber = str => {\n  return /\\d/.test(str);\n};\n\nconst hasLowerCase = str => {\n  return str.toUpperCase() !== str;\n};\n\nconst hasUpperCase = str => {\n  return str.toLowerCase() !== str;\n};\n\nfunction validatePassword(text) {\n  if (text.length < 8) return \"Password should be 8 or more characters\";\n  if (!hasLowerCase(text) || !hasUpperCase(text)) return \"Password should contains minimum 1 character for both uppercase and lowercase letter\";\n  if (!hasNumber(text)) return \"Password should contains minimum 1 digit of numeric value\";\n  if (!hasSpecialChar(text)) return \"Password should contains minimum 1 special character\";\n  return \"\";\n}\n\nfunction validateEmail(email) {\n  return EmailValidator.validate(email);\n}\n\nexport { validatePassword, validateEmail };","map":{"version":3,"sources":["C:/Users/dandu/OneDrive/Desktop/blackbird-harrison-ai (1)/compfile/src/components/LoginForm/validation.js"],"names":["EmailValidator","hasSpecialChar","str","test","hasNumber","hasLowerCase","toUpperCase","hasUpperCase","toLowerCase","validatePassword","text","length","validateEmail","email","validate"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,iBAAhC;;AAEA,MAAMC,cAAc,GAAIC,GAAD,IAAS;AAC5B,SAAO,yCAAyCC,IAAzC,CAA8CD,GAA9C,CAAP;AACH,CAFD;;AAIA,MAAME,SAAS,GAAIF,GAAD,IAAS;AACvB,SAAO,KAAKC,IAAL,CAAUD,GAAV,CAAP;AACH,CAFD;;AAIA,MAAMG,YAAY,GAAIH,GAAD,IAAS;AAC1B,SAAOA,GAAG,CAACI,WAAJ,OAAsBJ,GAA7B;AACH,CAFD;;AAIA,MAAMK,YAAY,GAAIL,GAAD,IAAS;AAC1B,SAAOA,GAAG,CAACM,WAAJ,OAAsBN,GAA7B;AACH,CAFD;;AAIA,SAASO,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO,yCAAP;AACrB,MAAI,CAACN,YAAY,CAACK,IAAD,CAAb,IAAuB,CAACH,YAAY,CAACG,IAAD,CAAxC,EAAgD,OAAO,sFAAP;AAChD,MAAI,CAACN,SAAS,CAACM,IAAD,CAAd,EAAsB,OAAO,2DAAP;AACtB,MAAI,CAACT,cAAc,CAACS,IAAD,CAAnB,EAA2B,OAAO,sDAAP;AAC3B,SAAO,EAAP;AACH;;AAED,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAOb,cAAc,CAACc,QAAf,CAAwBD,KAAxB,CAAP;AACH;;AAED,SACIJ,gBADJ,EAEIG,aAFJ","sourcesContent":["import * as EmailValidator from 'email-validator';\n\nconst hasSpecialChar = (str) => {\n    return /[ `!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/.test(str);\n}\n\nconst hasNumber = (str) => {\n    return /\\d/.test(str);\n}\n\nconst hasLowerCase = (str) => {\n    return str.toUpperCase() !== str;\n}\n\nconst hasUpperCase = (str) => {\n    return str.toLowerCase() !== str;\n}\n\nfunction validatePassword(text) {\n    if (text.length < 8) return \"Password should be 8 or more characters\";\n    if (!hasLowerCase(text) || !hasUpperCase(text)) return \"Password should contains minimum 1 character for both uppercase and lowercase letter\";\n    if (!hasNumber(text)) return \"Password should contains minimum 1 digit of numeric value\";\n    if (!hasSpecialChar(text)) return \"Password should contains minimum 1 special character\";\n    return \"\";\n}\n\nfunction validateEmail(email) {\n    return EmailValidator.validate(email);\n}\n\nexport {\n    validatePassword,\n    validateEmail,\n}"]},"metadata":{},"sourceType":"module"}